'use script';
// spread оператор брал сущность и раскладывал ее на элементы, то rest занимается обратным
// rest оператор отдельные элементы объединяет в один массив

// важный момент: rest оператор (...<название>) записывается всегда последним, сначала
// пишут обязательные аргументы, а дальше оператор rest, который говорит
// что в данном случаем может быть бесконечное количество аргументов
// этот оператор собирает все оставшееся, что попадет в него и он формирует
// из этого массив
const log = function(a, b, ...rest) {
    console.log(a,b, rest);
};
// отработка rest оператора
log('basic', 'rest', 'opretor', 'usage'); // basic rest [ 'opretor', 'usage' ]

// параметры по умолчанию
function calcOrDouble(number, basis = 2) {
    // до стандарта ES6 записывали через ИЛИ
    // если параметр не передали, то там undefined - это false => берут 2
    // но иногда такие проверки приводили к ошибкам
    // в стандарте ES6 такие параметры просто указываются в аргументе
    // basis = basis || 2;

    console.log(number * basis);
}
calcOrDouble(3);
