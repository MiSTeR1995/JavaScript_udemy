
// МОдульная структура это фишка стандарта ES6
// этот стандарт точно также как синтаксис commonJS позволяет формировать модули
// при помощи специального синтаксиса

// структура этого стандарта более гибкая

// импортируем сюда. ключевое слово import {} from './'
// обязательно через фигурые скобки.
// import {one, two} from './main';

// console.log(`${one} and ${two}`);

// этот синтаксис также необходимо собирать через сборщик в один рабочий скрипт

// дополнительные плюшки этого синтаксиса
// 1) когда что-то импортируем в наш проект, то можно переименовать сущность в импорте
// ипсользуется для импорта больших названий
// import {one as first} from './main';

// 2) импорт всего, что экспортируется в файле из кооторого хотим импортировать
// import * as data from './main'; // data - объект всего, что вытащили из того файла
// console.log(`${data.one} and ${data.two}`);
// data.sayHi();

// по факту импортируется объект, из которого мы вытаскиваем определенные пермеенные
// был один объект, мы его деструктурировали на отдельные переменные

// кроме именнованого синтаксиса есть также экспорт по умолчанию.
// он может быть только один в файле
// преимущесвто этого экспорта. Когда нужно импортировать этот файл куда-то
// именно используя дефолтный экспорт. Такая сущность берется не как именнованая
// а напрямую экспортируется.
// Экспорт по умолчанию должен быть только один.

// По факту дефолтный экспорт это тоже именнованый экспорт и выглядит внутри след образом.
// но так не нужно писать каждый раз
// import {default as sayHi} from './main';

// import {one, two} from './main';

// console.log(`${one} and ${two}`);
// import sayHi from './main';

// sayHi();


// интересная фича на странице это аттрибут type module
// применяется к тегу script, чтобы использовать скрипты в качестве модулей.
// см. index.html

// сначала подключаем экспорты, потом имппорты
// нужно обязательно задать аттрибут модуль
// но стоит помнить, что браузер не собирает модули!
// но он может последовательно подключать эти файлы экспорт импорт
// если таких модулей много, то нужно будет их подключить все последовательно

// <script type='module' src="./js/main.js"></script>
// <script type='module' src="./js/script.js"></script>

// нужно правильно прописывать и пути, если вебпек без расширения понимал что это js, то браузер нет
import { one, two } from './main.js';
import sayHi from './main.js';

console.log(`${one} and ${two}`);

sayHi();

// этой фишкой пользуются редко, но стоит помнить об этом
